{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A Collection of fMRI Tools This site provides a landing page to summarize resources within the ME-ICA organization. Note ME-ICA was originally created specifically for the tedana library, which uses independent components analysis (ICA) on multi-echo (ME) fMRI data. As part of development, we built tools that work with tedana but may also have stand-alone uses for processing and visualizing fMRI data that is not multi-echo. While the \"ME-ICA\" may not accurately describe all these tools, we have chosen to keep it for now because we're used to it. tedana tedana TE Dependant ANAlysis. Calculates echo dependance of each ICA component and denoises data by removing components that are unlikely to contain BOLD signal. rica rica Reports for ICA. An app to visualize ICA components and perform manual classification in an interactive way. This could work on any component maps of fMRI data. It currently expects some files that are output from tedana but similar files could be generated by other programs or addition input options could be added to rica mapca mapca Moving Average Principal Components Analysis. This started as a Python port of the dimensionality reduction technique described in Li et al 2007 and used in GIFT . ddmra ddmra is a Python package for performing distance-dependent motion-related artifact analyses. This is modeled after the analyses performed in Power et al 2018 me-ica meica The package that started it all. This is a clone of the multi-echo denoising code by Prantik Kundu that tedana is based on. It is no longer maintained, and only runs on Python 2.7. It may be useful as a reference to to replicate past work, but we recommend people use tedana instead of this. Works in progress We welcome contributors, but these tools are not ready for general use. Multi-Echo (fMRI) Data Analysis Book multi-echo-data-analysis An early-stage effort to create a Jupyter-based book to explain multi-echo fMRI analysis and tedana . Comments, ideas, and contributions are very welcome. aroma aroma is a fork of ICA-AROMA which we have been working to make work purely with Python, in a BIDS-compatible manner. AROMA is similar to tedana in that it uses features of ICA components to classify some as noise to remove them. Tedana's features are primarily based on how signals change across echoes. AROMA's features are based on how much of a component's highly weighted voxels are near brain or ventricle edges and whether component time series are too high frequency to be BOLD. There are complementary approaches that may work well together. godec godec is a Python package for Go Decomposition , specifically built to work with fMRI data. Scientific Conferences We have documented the progress of tedana at the Organization For Human Brain Mapping annual meetings. For several years, we have shared the tedana poster, an interactive demonstration of the results and compiled other multi-echo posters and presentations at the conference. Each year includes an interactive demonstration of how tedana's output looked at that time. OHBM 2021 OHBM 2020 OHBM 2019","title":"The ME-ICA Organization"},{"location":"#a-collection-of-fmri-tools","text":"This site provides a landing page to summarize resources within the ME-ICA organization. Note ME-ICA was originally created specifically for the tedana library, which uses independent components analysis (ICA) on multi-echo (ME) fMRI data. As part of development, we built tools that work with tedana but may also have stand-alone uses for processing and visualizing fMRI data that is not multi-echo. While the \"ME-ICA\" may not accurately describe all these tools, we have chosen to keep it for now because we're used to it.","title":"A Collection of fMRI Tools"},{"location":"#tedana","text":"tedana TE Dependant ANAlysis. Calculates echo dependance of each ICA component and denoises data by removing components that are unlikely to contain BOLD signal.","title":"tedana"},{"location":"#rica","text":"rica Reports for ICA. An app to visualize ICA components and perform manual classification in an interactive way. This could work on any component maps of fMRI data. It currently expects some files that are output from tedana but similar files could be generated by other programs or addition input options could be added to rica","title":"rica"},{"location":"#mapca","text":"mapca Moving Average Principal Components Analysis. This started as a Python port of the dimensionality reduction technique described in Li et al 2007 and used in GIFT .","title":"mapca"},{"location":"#ddmra","text":"ddmra is a Python package for performing distance-dependent motion-related artifact analyses. This is modeled after the analyses performed in Power et al 2018","title":"ddmra"},{"location":"#me-ica","text":"meica The package that started it all. This is a clone of the multi-echo denoising code by Prantik Kundu that tedana is based on. It is no longer maintained, and only runs on Python 2.7. It may be useful as a reference to to replicate past work, but we recommend people use tedana instead of this.","title":"me-ica"},{"location":"#works-in-progress","text":"We welcome contributors, but these tools are not ready for general use.","title":"Works in progress"},{"location":"#multi-echo-fmri-data-analysis-book","text":"multi-echo-data-analysis An early-stage effort to create a Jupyter-based book to explain multi-echo fMRI analysis and tedana . Comments, ideas, and contributions are very welcome.","title":"Multi-Echo (fMRI) Data Analysis Book"},{"location":"#aroma","text":"aroma is a fork of ICA-AROMA which we have been working to make work purely with Python, in a BIDS-compatible manner. AROMA is similar to tedana in that it uses features of ICA components to classify some as noise to remove them. Tedana's features are primarily based on how signals change across echoes. AROMA's features are based on how much of a component's highly weighted voxels are near brain or ventricle edges and whether component time series are too high frequency to be BOLD. There are complementary approaches that may work well together.","title":"aroma"},{"location":"#godec","text":"godec is a Python package for Go Decomposition , specifically built to work with fMRI data.","title":"godec"},{"location":"#scientific-conferences","text":"We have documented the progress of tedana at the Organization For Human Brain Mapping annual meetings. For several years, we have shared the tedana poster, an interactive demonstration of the results and compiled other multi-echo posters and presentations at the conference. Each year includes an interactive demonstration of how tedana's output looked at that time. OHBM 2021 OHBM 2020 OHBM 2019","title":"Scientific Conferences"}]}